-----------------------------------------------------------------------------
Info file generated by Happy Version 1.20.0 from src/L/L1/Frontend/LALRParser.y
-----------------------------------------------------------------------------


-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_lalrParser -> Program                       (0)
	Program -> Stmts EOF                               (1)
	Program -> Stmts SEMICOLON EOF                     (2)
	Stmts -> Stmts Stmt                                (3)
	Stmts ->                                           (4)
	Stmt -> IDENT ASSIGN Expr SEMICOLON                (5)
	Stmt -> READ LPAREN OptString Var RPAREN SEMICOLON   (6)
	Stmt -> PRINT LPAREN STRING PLUS Expr RPAREN SEMICOLON   (7)
	Stmt -> PRINT LPAREN Expr RPAREN SEMICOLON         (8)
	OptString -> STRING COMMA                          (9)
	OptString ->                                       (10)
	Var -> IDENT                                       (11)
	Expr -> Expr PLUS Expr                             (12)
	Expr -> Expr MINUS Expr                            (13)
	Expr -> Expr TIMES Expr                            (14)
	Expr -> Expr DIV Expr                              (15)
	Expr -> NUMBER                                     (16)
	Expr -> IDENT                                      (17)
	Expr -> LPAREN Expr RPAREN                         (18)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	IDENT          { Token _ (TIdent $$) }
	NUMBER         { Token _ (TNumber $$) }
	STRING         { Token _ (TString $$) }
	PLUS           { Token _ TPlus }
	MINUS          { Token _ TMinus }
	TIMES          { Token _ TTimes }
	DIV            { Token _ TDiv }
	ASSIGN         { Token _ TAssign }
	SEMICOLON      { Token _ TSemicolon }
	COMMA          { Token _ TComma }
	LPAREN         { Token _ TLParen }
	RPAREN         { Token _ TRParen }
	READ           { Token _ TRead }
	PRINT          { Token _ TPrint }
	EOF            { Token _ TEOF }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_lalrParser rule  0
	Program         rules 1, 2
	Stmts           rules 3, 4
	Stmt            rules 5, 6, 7, 8
	OptString       rules 9, 10
	Var             rule  11
	Expr            rules 12, 13, 14, 15, 16, 17, 18

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0

	%start_lalrParser -> . Program                      (rule 0)

	IDENT          reduce using rule 4
	SEMICOLON      reduce using rule 4
	READ           reduce using rule 4
	PRINT          reduce using rule 4
	EOF            reduce using rule 4

	Program        goto state 3
	Stmts          goto state 4

State 1

	Program -> . Stmts EOF                              (rule 1)


	Stmts          goto state 2

State 2

	Program -> Stmts . EOF                              (rule 1)
	Stmts -> Stmts . Stmt                               (rule 3)

	IDENT          shift, and enter state 6
	READ           shift, and enter state 8
	PRINT          shift, and enter state 9
	EOF            shift, and enter state 10

	Stmt           goto state 5

State 3

	%start_lalrParser -> Program .                      (rule 0)

	%eof           accept


State 4

	Program -> Stmts . EOF                              (rule 1)
	Program -> Stmts . SEMICOLON EOF                    (rule 2)
	Stmts -> Stmts . Stmt                               (rule 3)

	IDENT          shift, and enter state 6
	SEMICOLON      shift, and enter state 7
	READ           shift, and enter state 8
	PRINT          shift, and enter state 9
	EOF            shift, and enter state 10

	Stmt           goto state 5

State 5

	Stmts -> Stmts Stmt .                               (rule 3)

	IDENT          reduce using rule 3
	SEMICOLON      reduce using rule 3
	READ           reduce using rule 3
	PRINT          reduce using rule 3
	EOF            reduce using rule 3


State 6

	Stmt -> IDENT . ASSIGN Expr SEMICOLON               (rule 5)

	ASSIGN         shift, and enter state 14


State 7

	Program -> Stmts SEMICOLON . EOF                    (rule 2)

	EOF            shift, and enter state 13


State 8

	Stmt -> READ . LPAREN OptString Var RPAREN SEMICOLON    (rule 6)

	LPAREN         shift, and enter state 12


State 9

	Stmt -> PRINT . LPAREN STRING PLUS Expr RPAREN SEMICOLON    (rule 7)
	Stmt -> PRINT . LPAREN Expr RPAREN SEMICOLON        (rule 8)

	LPAREN         shift, and enter state 11


State 10

	Program -> Stmts EOF .                              (rule 1)

	%eof           reduce using rule 1


State 11

	Stmt -> PRINT LPAREN . STRING PLUS Expr RPAREN SEMICOLON    (rule 7)
	Stmt -> PRINT LPAREN . Expr RPAREN SEMICOLON        (rule 8)

	IDENT          shift, and enter state 16
	NUMBER         shift, and enter state 17
	STRING         shift, and enter state 22
	LPAREN         shift, and enter state 18

	Expr           goto state 21

State 12

	Stmt -> READ LPAREN . OptString Var RPAREN SEMICOLON    (rule 6)

	IDENT          reduce using rule 10
	STRING         shift, and enter state 20

	OptString      goto state 19

State 13

	Program -> Stmts SEMICOLON EOF .                    (rule 2)

	%eof           reduce using rule 2


State 14

	Stmt -> IDENT ASSIGN . Expr SEMICOLON               (rule 5)

	IDENT          shift, and enter state 16
	NUMBER         shift, and enter state 17
	LPAREN         shift, and enter state 18

	Expr           goto state 15

State 15

	Stmt -> IDENT ASSIGN Expr . SEMICOLON               (rule 5)
	Expr -> Expr . PLUS Expr                            (rule 12)
	Expr -> Expr . MINUS Expr                           (rule 13)
	Expr -> Expr . TIMES Expr                           (rule 14)
	Expr -> Expr . DIV Expr                             (rule 15)

	PLUS           shift, and enter state 24
	MINUS          shift, and enter state 25
	TIMES          shift, and enter state 26
	DIV            shift, and enter state 27
	SEMICOLON      shift, and enter state 33


State 16

	Expr -> IDENT .                                     (rule 17)

	PLUS           reduce using rule 17
	MINUS          reduce using rule 17
	TIMES          reduce using rule 17
	DIV            reduce using rule 17
	SEMICOLON      reduce using rule 17
	RPAREN         reduce using rule 17


State 17

	Expr -> NUMBER .                                    (rule 16)

	PLUS           reduce using rule 16
	MINUS          reduce using rule 16
	TIMES          reduce using rule 16
	DIV            reduce using rule 16
	SEMICOLON      reduce using rule 16
	RPAREN         reduce using rule 16


State 18

	Expr -> LPAREN . Expr RPAREN                        (rule 18)

	IDENT          shift, and enter state 16
	NUMBER         shift, and enter state 17
	LPAREN         shift, and enter state 18

	Expr           goto state 32

State 19

	Stmt -> READ LPAREN OptString . Var RPAREN SEMICOLON    (rule 6)

	IDENT          shift, and enter state 31

	Var            goto state 30

State 20

	OptString -> STRING . COMMA                         (rule 9)

	COMMA          shift, and enter state 29


State 21

	Stmt -> PRINT LPAREN Expr . RPAREN SEMICOLON        (rule 8)
	Expr -> Expr . PLUS Expr                            (rule 12)
	Expr -> Expr . MINUS Expr                           (rule 13)
	Expr -> Expr . TIMES Expr                           (rule 14)
	Expr -> Expr . DIV Expr                             (rule 15)

	PLUS           shift, and enter state 24
	MINUS          shift, and enter state 25
	TIMES          shift, and enter state 26
	DIV            shift, and enter state 27
	RPAREN         shift, and enter state 28


State 22

	Stmt -> PRINT LPAREN STRING . PLUS Expr RPAREN SEMICOLON    (rule 7)

	PLUS           shift, and enter state 23


State 23

	Stmt -> PRINT LPAREN STRING PLUS . Expr RPAREN SEMICOLON    (rule 7)

	IDENT          shift, and enter state 16
	NUMBER         shift, and enter state 17
	LPAREN         shift, and enter state 18

	Expr           goto state 41

State 24

	Expr -> Expr PLUS . Expr                            (rule 12)

	IDENT          shift, and enter state 16
	NUMBER         shift, and enter state 17
	LPAREN         shift, and enter state 18

	Expr           goto state 40

State 25

	Expr -> Expr MINUS . Expr                           (rule 13)

	IDENT          shift, and enter state 16
	NUMBER         shift, and enter state 17
	LPAREN         shift, and enter state 18

	Expr           goto state 39

State 26

	Expr -> Expr TIMES . Expr                           (rule 14)

	IDENT          shift, and enter state 16
	NUMBER         shift, and enter state 17
	LPAREN         shift, and enter state 18

	Expr           goto state 38

State 27

	Expr -> Expr DIV . Expr                             (rule 15)

	IDENT          shift, and enter state 16
	NUMBER         shift, and enter state 17
	LPAREN         shift, and enter state 18

	Expr           goto state 37

State 28

	Stmt -> PRINT LPAREN Expr RPAREN . SEMICOLON        (rule 8)

	SEMICOLON      shift, and enter state 36


State 29

	OptString -> STRING COMMA .                         (rule 9)

	IDENT          reduce using rule 9


State 30

	Stmt -> READ LPAREN OptString Var . RPAREN SEMICOLON    (rule 6)

	RPAREN         shift, and enter state 35


State 31

	Var -> IDENT .                                      (rule 11)

	RPAREN         reduce using rule 11


State 32

	Expr -> Expr . PLUS Expr                            (rule 12)
	Expr -> Expr . MINUS Expr                           (rule 13)
	Expr -> Expr . TIMES Expr                           (rule 14)
	Expr -> Expr . DIV Expr                             (rule 15)
	Expr -> LPAREN Expr . RPAREN                        (rule 18)

	PLUS           shift, and enter state 24
	MINUS          shift, and enter state 25
	TIMES          shift, and enter state 26
	DIV            shift, and enter state 27
	RPAREN         shift, and enter state 34


State 33

	Stmt -> IDENT ASSIGN Expr SEMICOLON .               (rule 5)

	IDENT          reduce using rule 5
	SEMICOLON      reduce using rule 5
	READ           reduce using rule 5
	PRINT          reduce using rule 5
	EOF            reduce using rule 5


State 34

	Expr -> LPAREN Expr RPAREN .                        (rule 18)

	PLUS           reduce using rule 18
	MINUS          reduce using rule 18
	TIMES          reduce using rule 18
	DIV            reduce using rule 18
	SEMICOLON      reduce using rule 18
	RPAREN         reduce using rule 18


State 35

	Stmt -> READ LPAREN OptString Var RPAREN . SEMICOLON    (rule 6)

	SEMICOLON      shift, and enter state 43


State 36

	Stmt -> PRINT LPAREN Expr RPAREN SEMICOLON .        (rule 8)

	IDENT          reduce using rule 8
	SEMICOLON      reduce using rule 8
	READ           reduce using rule 8
	PRINT          reduce using rule 8
	EOF            reduce using rule 8


State 37

	Expr -> Expr . PLUS Expr                            (rule 12)
	Expr -> Expr . MINUS Expr                           (rule 13)
	Expr -> Expr . TIMES Expr                           (rule 14)
	Expr -> Expr . DIV Expr                             (rule 15)
	Expr -> Expr DIV Expr .                             (rule 15)

	PLUS           reduce using rule 15
	MINUS          reduce using rule 15
	TIMES          reduce using rule 15
	DIV            reduce using rule 15
	SEMICOLON      reduce using rule 15
	RPAREN         reduce using rule 15


State 38

	Expr -> Expr . PLUS Expr                            (rule 12)
	Expr -> Expr . MINUS Expr                           (rule 13)
	Expr -> Expr . TIMES Expr                           (rule 14)
	Expr -> Expr TIMES Expr .                           (rule 14)
	Expr -> Expr . DIV Expr                             (rule 15)

	PLUS           reduce using rule 14
	MINUS          reduce using rule 14
	TIMES          reduce using rule 14
	DIV            reduce using rule 14
	SEMICOLON      reduce using rule 14
	RPAREN         reduce using rule 14


State 39

	Expr -> Expr . PLUS Expr                            (rule 12)
	Expr -> Expr . MINUS Expr                           (rule 13)
	Expr -> Expr MINUS Expr .                           (rule 13)
	Expr -> Expr . TIMES Expr                           (rule 14)
	Expr -> Expr . DIV Expr                             (rule 15)

	PLUS           reduce using rule 13
	MINUS          reduce using rule 13
	TIMES          shift, and enter state 26
	DIV            shift, and enter state 27
	SEMICOLON      reduce using rule 13
	RPAREN         reduce using rule 13


State 40

	Expr -> Expr . PLUS Expr                            (rule 12)
	Expr -> Expr PLUS Expr .                            (rule 12)
	Expr -> Expr . MINUS Expr                           (rule 13)
	Expr -> Expr . TIMES Expr                           (rule 14)
	Expr -> Expr . DIV Expr                             (rule 15)

	PLUS           reduce using rule 12
	MINUS          reduce using rule 12
	TIMES          shift, and enter state 26
	DIV            shift, and enter state 27
	SEMICOLON      reduce using rule 12
	RPAREN         reduce using rule 12


State 41

	Stmt -> PRINT LPAREN STRING PLUS Expr . RPAREN SEMICOLON    (rule 7)
	Expr -> Expr . PLUS Expr                            (rule 12)
	Expr -> Expr . MINUS Expr                           (rule 13)
	Expr -> Expr . TIMES Expr                           (rule 14)
	Expr -> Expr . DIV Expr                             (rule 15)

	PLUS           shift, and enter state 24
	MINUS          shift, and enter state 25
	TIMES          shift, and enter state 26
	DIV            shift, and enter state 27
	RPAREN         shift, and enter state 42


State 42

	Stmt -> PRINT LPAREN STRING PLUS Expr RPAREN . SEMICOLON    (rule 7)

	SEMICOLON      shift, and enter state 44


State 43

	Stmt -> READ LPAREN OptString Var RPAREN SEMICOLON .    (rule 6)

	IDENT          reduce using rule 6
	SEMICOLON      reduce using rule 6
	READ           reduce using rule 6
	PRINT          reduce using rule 6
	EOF            reduce using rule 6


State 44

	Stmt -> PRINT LPAREN STRING PLUS Expr RPAREN SEMICOLON .    (rule 7)

	IDENT          reduce using rule 7
	SEMICOLON      reduce using rule 7
	READ           reduce using rule 7
	PRINT          reduce using rule 7
	EOF            reduce using rule 7


-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 19
Number of terminals: 15
Number of non-terminals: 7
Number of states: 45
